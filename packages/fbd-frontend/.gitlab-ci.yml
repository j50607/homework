variables:
  DEPLOY_PATH: /home/www/comprehensive
  DIR_PROJECT_TYPE: anti
  DEPLOY_APP_VERSION: v0.1.0

services:
  - name: registry.dingyi.io/docker-public/docker:19.03.12-dind
    alias: docker

cache:
  paths:
    - node_modules/

stages:
  - deploy
  - build_image
  - update_image_tag

.before_script: &before_script |
  mkdir -p ~/.ssh
  echo "$GITLAB_RUNNER_SSH_PRIVATE_KEY_DEV" > ~/.ssh/id_rsa
  chmod 700 ~/.ssh/id_rsa

.remove_script: &remove_script |
  echo "Removing old variables from configs..."
  sed -i '/VUE_APP_SYSTEM_BASE =/d' $TARGET_ENV_FILE
  sed -i '/VUE_APP_MEMBER_BASE =/d' $TARGET_ENV_FILE
  sed -i '/VUE_APP_FINANCE_BASE =/d' $TARGET_ENV_FILE
  sed -i '/VUE_APP_SPORT_BASE =/d' $TARGET_ENV_FILE
  sed -i '/VUE_APP_BASE_CDN_URL =/d' $TARGET_ENV_FILE
  sed -i '/VUE_APP_SOCKET_BASE =/d' $TARGET_ENV_FILE
  sed -i '/VUE_APP_THIRD_PARTY_LOGIN_URL =/d' $TARGET_ENV_FILE

.build_script: &build_script |
  echo "Building..."
  npm config set @frontend:registry https://git.dingyi.io/api/v4/packages/npm/
  npm config set '//git.dingyi.io/api/v4/packages/npm/:_authToken' ${CI_JOB_TOKEN}
  npm install
  npm run build:prod
  npm run redirect

.build_redirect_script: &build_redirect_script |
  cd redirect/ && npm install
  mkdir -p ./output/403/
  mkdir -p ./output/500/
  cp ./403/* ./output/403/
  cp ./500/* ./output/500/
  sed -i "s/\.\//\/403\//g" ./output/403/index.html
  sed -i "s/\.\//\/403\//g" ./output/403/index.js
  sed -i "s/\.\//\/500\//g" ./output/500/index.html
  sed -i "s/\.\//\/500\//g" ./output/500/index.js
  npx babel ./output/403/index.js --out-file ./output/403/index.js
  npx uglifyjs ./output/403/index.js --output ./output/403/index.js
  npx babel ./output/500/index.js --out-file ./output/500/index.js
  npx uglifyjs ./output/500/index.js --output ./output/500/index.js
  cd ..

.deploy_script: &deploy_script |
  (for SERVER in $TARGET_SERVERS;
  do
    ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null www-data@${SERVER} mkdir -p ${DEPLOY_PATH}/${TARGET_ENV}/${DIR_PROJECT_TYPE};
    rsync -av --delete -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ./dist/* www-data@${SERVER}:${DEPLOY_PATH}/${TARGET_ENV}/${DIR_PROJECT_TYPE};
  done);

.build_image_script: &build_image_script |
  docker login -u $DOCKER_SWARM_DEPLOYER_UESRNAME -p $DOCKER_SWARM_DEPLOYER_TOKEN $CI_REGISTRY
  docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$TARGET_ENV:$CI_COMMIT_SHORT_SHA .
  docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$TARGET_ENV:$CI_COMMIT_SHORT_SHA
  docker tag $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$TARGET_ENV:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$TARGET_ENV:latest
  docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$TARGET_ENV:latest

# update helm chart image tag
.update_image_tag: &update_image_tag |
  mkdir -p ~/.ssh
  echo "$XANXUS_GITLAB_RUNNER_KEY_TEST_PRIVATE_KEY" > ~/.ssh/id_rsa
  chmod 700 ~/.ssh/id_rsa
  cat <<EOT >> ~/.ssh/config
  Host *
      StrictHostKeyChecking no
  EOT
  git clone -b $CI_COMMIT_REF_NAME git@git.dingyi.io:sre/helm-charts/frontend/$CI_PROJECT_NAME.git
  cd $CI_PROJECT_NAME
  sed -i "s/^  tag:.*/  tag: \"$CI_COMMIT_SHORT_SHA\"/g" values.yaml
  git config --global user.email "gitlab-runner@gitlab-runner.com"
  git config --global user.name "Gitlab Runner"
  git add . && git diff-index --quiet HEAD || git commit -m "update image tag: $CI_COMMIT_SHORT_SHA" && (git push) || true

deploy_dev:
  image: registry.dingyi.io/docker-public/nodejs/rsync-ssh:latest
  stage: deploy
  script:
    - *before_script
    - echo "TARGET_ENV='dev'" >> build.env
    - echo "TARGET_ENV_FILE='./.env.prod'" >> build.env
    - source build.env
    - export TARGET_SERVERS="$DEV_SERVERS"
    - echo VUE_APP_MEMBER_BASE = /api/member >> $TARGET_ENV_FILE
    - echo VUE_APP_FINANCE_BASE = /api/finance >> $TARGET_ENV_FILE
    - echo VUE_APP_SPORT_BASE = /api/sport >> $TARGET_ENV_FILE
    - echo VUE_APP_SYSTEM_BASE = /api/system >> $TARGET_ENV_FILE
    - echo VUE_APP_SOCKET_BASE = /api/notify/ws/socket.io >> $TARGET_ENV_FILE
    - echo VUE_APP_BASE_CDN_URL = https://$DEV_CDN_DOMAIN >> $TARGET_ENV_FILE
    - echo VUE_APP_THIRD_PARTY_LOGIN_URL = https://sso.dingyi.io/ >> $TARGET_ENV_FILE
    - *build_redirect_script
    - *build_script
    - *deploy_script
  artifacts:
    name: "package"
    paths:
      - dist
      - build.env
    expire_in: 3min
  environment:
    name: $TARGET_ENV
  only:
    - develop

# DEV BUILD IMAGE JOBS
# ================================================================================
dev_build_image:
  image: registry.dingyi.io/docker-public/docker:19.03.12
  stage: build_image
  script:
    - source build.env
    - *build_image_script
  dependencies:
    - deploy_dev
  environment:
    name: $TARGET_ENV
  only:
    - develop

# DEV UPDATE HELM CHART IMAGE TAG
# ================================================================================
dev_update_image_tag:
  image: registry.dingyi.io/docker-public/nodejs/rsync-ssh:latest
  stage: update_image_tag
  script:
    - *update_image_tag
  environment:
    name: $CI_COMMIT_REF_NAME
  only:
    - develop

deploy_test:
  image: registry.dingyi.io/docker-public/nodejs/rsync-ssh:latest
  stage: deploy
  script:
    - *before_script
    - echo "TARGET_ENV='test'" >> build.env
    - export TARGET_ENV_FILE='./.env.prod'
    - export TARGET_SERVERS="$TEST_SERVERS"
    - source build.env
    - echo VUE_APP_MEMBER_BASE = /api/member >> $TARGET_ENV_FILE
    - echo VUE_APP_FINANCE_BASE = /api/finance >> $TARGET_ENV_FILE
    - echo VUE_APP_SPORT_BASE = /api/sport >> $TARGET_ENV_FILE
    - echo VUE_APP_SYSTEM_BASE = /api/system >> $TARGET_ENV_FILE
    - echo VUE_APP_SOCKET_BASE = /api/notify/ws/socket.io >> $TARGET_ENV_FILE
    - echo VUE_APP_BASE_CDN_URL = https://$TEST_CDN_DOMAIN >> $TARGET_ENV_FILE
    - echo VUE_APP_THIRD_PARTY_LOGIN_URL = https://sso.dingyi.io/ >> $TARGET_ENV_FILE
    - *build_redirect_script
    - *build_script
    - *deploy_script
  artifacts:
    name: "package"
    paths:
      - dist
      - build.env
    expire_in: 3min
  environment:
    name: $TARGET_ENV
  only:
    - test

# TEST BUILD IMAGE JOBS
# ================================================================================
test_build_image:
  image: registry.dingyi.io/docker-public/docker:19.03.12
  stage: build_image
  script:
    - source build.env
    - *build_image_script
  dependencies:
    - deploy_test
  environment:
    name: $TARGET_ENV
  only:
    - test

# TEST UPDATE HELM CHART IMAGE TAG
# ================================================================================
test_update_image_tag:
  image: registry.dingyi.io/docker-public/nodejs/rsync-ssh:latest
  stage: update_image_tag
  script:
    - *update_image_tag
  environment:
    name: $CI_COMMIT_REF_NAME
  only:
    - test

deploy_stage:
  image: registry.dingyi.io/docker-public/nodejs/rsync-ssh:latest
  stage: deploy
  script:
    - *before_script
    - export TARGET_ENV='stage'
    - export TARGET_ENV_FILE='./.env.prod'
    - export TARGET_SERVERS="$STAGE_SERVERS"
    - echo VUE_APP_MEMBER_BASE = /api/member >> $TARGET_ENV_FILE
    - echo VUE_APP_FINANCE_BASE = /api/finance >> $TARGET_ENV_FILE
    - echo VUE_APP_SPORT_BASE = /api/sport >> $TARGET_ENV_FILE
    - echo VUE_APP_SYSTEM_BASE = /api/system >> $TARGET_ENV_FILE
    - echo VUE_APP_SOCKET_BASE = /api/notify/ws/socket.io >> $TARGET_ENV_FILE
    - echo VUE_APP_BASE_CDN_URL = https://$STAGE_CDN_DOMAIN >> $TARGET_ENV_FILE
    - echo VUE_APP_THIRD_PARTY_LOGIN_URL = https://sso.dingyi.io/ >> $TARGET_ENV_FILE
    - *build_redirect_script
    - *build_script
    - *deploy_script
  environment:
    name: $TARGET_ENV
  only:
    - master

deploy_prod:
  image: registry.dingyi.io/docker-public/nodejs/rsync-ssh:latest
  stage: deploy
  script:
    - *before_script
    - export TARGET_ENV='prod'
    - export TARGET_ENV_FILE='./.env.prod'
    - export TARGET_SERVERS="$PROD_SERVERS"
    - echo VUE_APP_MEMBER_BASE = /api/member >> $TARGET_ENV_FILE
    - echo VUE_APP_FINANCE_BASE = /api/finance >> $TARGET_ENV_FILE
    - echo VUE_APP_SPORT_BASE = /api/sport >> $TARGET_ENV_FILE
    - echo VUE_APP_SYSTEM_BASE = /api/system >> $TARGET_ENV_FILE
    - echo VUE_APP_SOCKET_BASE = /api/notify/ws/socket.io >> $TARGET_ENV_FILE
    - echo VUE_APP_BASE_CDN_URL = https://$PROD_CDN_DOMAIN >> $TARGET_ENV_FILE
    - echo VUE_APP_THIRD_PARTY_LOGIN_URL = https://sso.sahudfi8y74933ujk.com/ >> $TARGET_ENV_FILE
    - *build_redirect_script
    - *build_script
    - *deploy_script
  environment:
    name: $TARGET_ENV
  only:
    - production
